{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Picker/Picker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/Picker/Picker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","modifiedData","fetchDailyData","changeData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Picker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","covidImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80fbd6a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\n\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate} }) => {\n\n    if(!confirmed) {\n        return 'Loading...'\n    }\n    \n    return (\n        <div className = {styles.container}>\n            <Grid container spacing = {3} justify = \"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>INFECTED</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp \n                                start = {0}\n                                end = {confirmed.value}\n                                duration={2.5}\n                                seperator=\",\"\n                            />\n                        </Typography>\n\n                        <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n                        <Typography variant = \"body2\">COVID 19 ACTIVE CASES</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>RECOVERED</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp \n                                start = {0}\n                                end = {recovered.value}\n                                duration={2.5}\n                                seperator=\",\"\n                            />\n                        </Typography>\n                        <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">COVID 19 RECOVERED CASES</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color = \"textSecondary\" gutterBottom>DEATHS</Typography>\n                        <Typography variant = \"h5\">\n                            <CountUp \n                                start = {0}\n                                end = {deaths.value}\n                                duration={2.5}\n                                seperator=\",\"\n                            />\n                        </Typography>\n                        <Typography color = \"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">COVID 19 DEATHS</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n\n    let changeableURL = url;\n\n    if(country) {\n        changeableURL = `${url}/countries/${country}`\n    }\n\n    try{\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\n\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate, };\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const changeData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return changeData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n\n    }\n}","import React, {useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const dailyData = await fetchDailyData();\n            setDailyData(dailyData);\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n       dailyData.length ? \n       (<Line \n            data = {{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: \"Infected\",\n                    borderColor: '#3333FF',\n                    fill: true,\n                }, {\n\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: \"Infected\",\n                    borderColor: '#red',\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n\n                }],\n            }}\n        \n        />\n       ) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar \n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5',\n                                'rgba(0,255,0,0.5)',\n                                'rgba(255, 0, 0, 0.5',\n                                ],\n                                data:[confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false},\n                        title: { display: true, text: `Current state in ${country}`},\n                    }}\n                />\n            ) : null\n    );\n\n\n    return (\n        <div className ={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './Picker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst Picker = ({ handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        };\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className = {styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value = \"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Picker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\n\n\nimport { Cards, Chart, Picker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport covidImage from './images/image.png';\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className = {styles.container}>\n                <img className={styles.image} src={covidImage} alt=\"Covid-19\"/>\n                <Cards data={data}/>\n                <Picker handleCountryChange = {this.handleCountryChange} />\n                <Chart data={data} country={country}/>\n                \n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Picker_formControl__3fSWf\"};"],"sourceRoot":""}